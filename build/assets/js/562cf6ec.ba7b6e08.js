"use strict";(self.webpackChunkappblox_docs=self.webpackChunkappblox_docs||[]).push([[580],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return b}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var a=o.createContext({}),s=function(e){var t=o.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),b=r,f=d["".concat(a,".").concat(b)]||d[b]||u[b]||l;return n?o.createElement(f,i(i({ref:t},p),{},{components:n})):o.createElement(f,i({ref:t},p))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<l;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6579:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return a},default:function(){return b},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var o=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],c={sidebar_position:4},a="blox login",s={unversionedId:"blox-cli/Commands/blox-login",id:"blox-cli/Commands/blox-login",title:"blox login",description:"blox login lets you log into Appblox/ Blox Registry.",source:"@site/docs/blox-cli/Commands/blox-login.md",sourceDirName:"blox-cli/Commands",slug:"/blox-cli/Commands/blox-login",permalink:"/docs/blox-cli/Commands/blox-login",editUrl:"https://github.com/Appblox/docs/tree/main/docs/blox-cli/Commands/blox-login.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Types of Blox",permalink:"/docs/types-of-blox"},next:{title:"blox connect",permalink:"/docs/blox-cli/Commands/blox-connect"}},p={},u=[{value:"Synopsis",id:"synopsis",level:3},{value:"Description",id:"description",level:3},{value:"Details",id:"details",level:3}],d={toc:u};function b(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"blox-login"},"blox login"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"blox login")," lets you log into Appblox/ Blox Registry."),(0,l.kt)("p",null,"Deploying a Blox includes the following steps:"),(0,l.kt)("h3",{id:"synopsis"},"Synopsis"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"blox login [options]\n")),(0,l.kt)("h3",{id:"description"},"Description"),(0,l.kt)("p",null,"Lets the user login to shield."),(0,l.kt)("h3",{id:"details"},"Details"),(0,l.kt)("p",null,"Has one option, ",(0,l.kt)("inlineCode",{parentName:"p"},"--no-localhost")," which prevents the CLI from starting localhost to receive the device code and exchanging for a token. Here, the user will manually paste the code."))}b.isMDXComponent=!0}}]);