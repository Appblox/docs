"use strict";(self.webpackChunkappblox_docs=self.webpackChunkappblox_docs||[]).push([[897],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return b}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(r),b=o,m=d["".concat(s,".").concat(b)]||d[b]||u[b]||l;return r?n.createElement(m,a(a({ref:t},c),{},{components:r})):n.createElement(m,a({ref:t},c))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var p=2;p<l;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7394:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return b},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var n=r(7462),o=r(3366),l=(r(7294),r(3905)),a=["components"],i={sidebar_position:5},s="blox start",p={unversionedId:"blox-cli/Commands/blox-start",id:"blox-cli/Commands/blox-start",title:"blox start",description:"1. Start all bloxes",source:"@site/docs/blox-cli/Commands/blox-start.md",sourceDirName:"blox-cli/Commands",slug:"/blox-cli/Commands/blox-start",permalink:"/docs/blox-cli/Commands/blox-start",editUrl:"https://github.com/Appblox/docs/tree/main/docs/blox-cli/Commands/blox-start.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"blox connect",permalink:"/docs/blox-cli/Commands/blox-connect"},next:{title:"blox stop",permalink:"/docs/blox-cli/Commands/blox-stop"}},c={},u=[{value:"Start all bloxes",id:"start-all-bloxes",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Description",id:"description",level:3},{value:"Details",id:"details",level:3},{value:"Start one ui blox",id:"start-one-ui-blox",level:2},{value:"Synopsis",id:"synopsis-1",level:3},{value:"Description",id:"description-1",level:3},{value:"Details",id:"details-1",level:3}],d={toc:u};function b(e){var t=e.components,r=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"blox-start"},"blox start"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#start-all-bloxes"},"Start all bloxes")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"#start-one-ui-blox"},"Start a blox"))),(0,l.kt)("h2",{id:"start-all-bloxes"},"Start all bloxes"),(0,l.kt)("h3",{id:"synopsis"},"Synopsis"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"blox start\n")),(0,l.kt)("h3",{id:"description"},"Description"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"blox start")," command will start the emulator and also all the available ui bloxes, installing all its pacakge dependencies first."),(0,l.kt)("h3",{id:"details"},"Details"),(0,l.kt)("p",null,"All bloxes will be updated and started. Function bloxes will be started in an emulator (a single process) and all ui bloxes will be seperate processes.",(0,l.kt)("br",{parentName:"p"}),"\n","There will be seperate logs for all ui bloxes and a single log for the emulator.",(0,l.kt)("br",{parentName:"p"}),"\n","Command is smart enough to know if the bloxes are already live and won't start them again.",(0,l.kt)("br",{parentName:"p"}),"\n","For ui bloxes, the port given in its webpack config is given priority, if it is not available another port is assigned."),(0,l.kt)("h2",{id:"start-one-ui-blox"},"Start one ui blox"),(0,l.kt)("h3",{id:"synopsis-1"},"Synopsis"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"blox start blox1\n")),(0,l.kt)("h3",{id:"description-1"},"Description"),(0,l.kt)("h3",{id:"details-1"},"Details"),(0,l.kt)("p",null,"Will run ",(0,l.kt)("inlineCode",{parentName:"p"},"webpack-dev-server")," inside the blox directory.",(0,l.kt)("br",{parentName:"p"}),"\n","Blox is marked as live. And logs will be written to 'logs/blox1.log'"))}b.isMDXComponent=!0}}]);