"use strict";(self.webpackChunkappblox_docs=self.webpackChunkappblox_docs||[]).push([[54],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var a=o.createContext({}),c=function(e){var n=o.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(a.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),f=r,m=u["".concat(a,".").concat(f)]||u[f]||d[f]||i;return t?o.createElement(m,l(l({ref:n},p),{},{components:t})):o.createElement(m,l({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=u;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var c=2;c<i;c++)l[c]=t[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},44:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return a},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var o=t(7462),r=t(3366),i=(t(7294),t(3905)),l=["components"],s={sidebar_position:16},a="blox sync",c={unversionedId:"blox-cli/Commands/blox-sync",id:"blox-cli/Commands/blox-sync",title:"blox sync",description:"Blox sync command can be used to convert existing projects that were not built as bloxes, to appblox projects.",source:"@site/docs/blox-cli/Commands/blox-sync.md",sourceDirName:"blox-cli/Commands",slug:"/blox-cli/Commands/blox-sync",permalink:"/docs/blox-cli/Commands/blox-sync",editUrl:"https://github.com/Appblox/docs/tree/main/docs/blox-cli/Commands/blox-sync.md",tags:[],version:"current",sidebarPosition:16,frontMatter:{sidebar_position:16},sidebar:"tutorialSidebar",previous:{title:"blox ls",permalink:"/docs/blox-cli/Commands/blox-ls"},next:{title:"blox pull",permalink:"/docs/blox-cli/Commands/blox-pull"}},p={},d=[{value:"Rebuild config json",id:"rebuild-config-json",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Description",id:"description",level:3},{value:"Details",id:"details",level:3},{value:"Recreate missing config json",id:"recreate-missing-config-json",level:2},{value:"Synopsis",id:"synopsis-1",level:3},{value:"Description",id:"description-1",level:3},{value:"Details",id:"details-1",level:3}],u={toc:d};function f(e){var n=e.components,t=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"blox-sync"},"blox sync"),(0,i.kt)("p",null,"Blox sync command can be used to convert existing projects that were not built as bloxes, to appblox projects.\nIt could also be called when there is a need to rebuild corrupt or missing appblox config file."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#rebuild-config-json"},"Rebuild config json")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#recreate-missing-config-json"},"Recreate missing config json"))),(0,i.kt)("h2",{id:"rebuild-config-json"},"Rebuild config json"),(0,i.kt)("h3",{id:"synopsis"},"Synopsis"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"blox sync\n")),(0,i.kt)("h3",{id:"description"},"Description"),(0,i.kt)("p",null,"If a directory for a blox is present and is valid, but the cli cannot identify it because it is not present in appblox config, running ",(0,i.kt)("em",{parentName:"p"},"blox sync")," will add it to the config."),(0,i.kt)("h3",{id:"details"},"Details"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"blox sync")," command will scan through the entire appblox directory, looking for valid ",(0,i.kt)("em",{parentName:"p"},"blox.config.json")," files. It'll also check for the location of bloxes in directory tree based on type. If there are misplaced bloxes, command will ask user to move folders to expected paths. Command will also check with the registry for the existence of found bloxes, and prompt user to register all the non-registered bloxes.",(0,i.kt)("br",{parentName:"p"}),"\n","At last a new config json is displayed where user can accept or reject the new config."),(0,i.kt)("h2",{id:"recreate-missing-config-json"},"Recreate missing config json"),(0,i.kt)("h3",{id:"synopsis-1"},"Synopsis"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"blox sync\n")),(0,i.kt)("h3",{id:"description-1"},"Description"),(0,i.kt)("p",null,"If the ",(0,i.kt)("em",{parentName:"p"},"appblox.config.json")," is gone missing, ",(0,i.kt)("inlineCode",{parentName:"p"},"blox sync")," can also rebuild it from scratch."),(0,i.kt)("h3",{id:"details-1"},"Details"),(0,i.kt)("p",null,"If config file is missing, user can enter the already registered app's name in sync and it can pull the already present config file for the app from registry.",(0,i.kt)("br",{parentName:"p"}),"\n","Command will always scan through directories and build a temporary config, which it used to compare with the config from registry, and displays the differences to the user. The user can decide to keep or discard the changes."))}f.isMDXComponent=!0}}]);