"use strict";(self.webpackChunkappblox_docs=self.webpackChunkappblox_docs||[]).push([[231],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return y}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),p=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=p(e.components);return o.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(t),y=r,m=u["".concat(l,".").concat(y)]||u[y]||d[y]||i;return t?o.createElement(m,a(a({ref:n},s),{},{components:t})):o.createElement(m,a({ref:n},s))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=u;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var p=2;p<i;p++)a[p]=t[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1064:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return l},default:function(){return y},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return d}});var o=t(7462),r=t(3366),i=(t(7294),t(3905)),a=["components"],c={sidebar_position:2},l="Composability vs Dependency",p={unversionedId:"composability-vs-dependency",id:"composability-vs-dependency",title:"Composability vs Dependency",description:"Composability",source:"@site/docs/composability-vs-dependency.mdx",sourceDirName:".",slug:"/composability-vs-dependency",permalink:"/docs/composability-vs-dependency",editUrl:"https://github.com/Appblox/docs/tree/main/docs/composability-vs-dependency.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Blox Architecture",permalink:"/docs/intro"},next:{title:"Types of Blox",permalink:"/docs/types-of-blox"}},s={},d=[{value:"Composability",id:"composability",level:2},{value:"Dependency",id:"dependency",level:2}],u={toc:d};function y(e){var n=e.components,t=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"composability-vs-dependency"},"Composability vs Dependency"),(0,i.kt)("h2",{id:"composability"},"Composability"),(0,i.kt)("p",null,"If ",(0,i.kt)("inlineCode",{parentName:"p"},"one or more Blox can be stitched together")," into an application, then we say these Blox can be ",(0,i.kt)("inlineCode",{parentName:"p"},"composable"),"."),(0,i.kt)("p",null,"For example, if a login Blox and signup Blox derive from a common Spec, we can stitch these together to build an authentication module. Here, we can say that the login and signup Blox are  composable."),(0,i.kt)("h2",{id:"dependency"},"Dependency"),(0,i.kt)("p",null,"If a Blox is an ",(0,i.kt)("inlineCode",{parentName:"p"},"essential requirement for another Blox")," to run, then the ",(0,i.kt)("inlineCode",{parentName:"p"},"former Blox is a dependency of the latter.")),(0,i.kt)("p",null,"A UI Blox with a Fn Blox integration has the Fn Blox as its dependency. Similarly, ",(0,i.kt)("inlineCode",{parentName:"p"},"if the Fn Blox depends on a Shared Blox (Utility Blox) for some use case handling, then the shared Blox is a dependency"),"."))}y.isMDXComponent=!0}}]);